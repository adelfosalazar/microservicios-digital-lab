spring.application.name=shopping-service
#spring.application.name=service-product
#
#server.port = 8080
#
#
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:file:~/digitalLabServiceProduct
##spring.datasource.url=jdbc:h2:mem:digitalLabServiceProduct
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
###Lanzar con create primero
##spring.jpa.hibernate.ddl-auto=create
#
###Detener la app y lanzar con always y update para cargar data.sql
##spring.sql.init.mode=always
#spring.jpa.hibernate.ddl-auto=update
#
###Mandarï¿½ error de nuevo, para continuar normal dejar solo update
#

#fin de .properties



#Inicia .yml

#Application Configuration
server:
  port: 8091
  error:
    include-message: always #Se agrega por que ResponseStatusException no muestra la Reason del error al crear un producto
    
# To See H2 Console in Browser:
# http://localhost:8091/h2-console
# Enabling H2 Console
spring:
  h2:
    console:
      enabled: true
  # ===============================
  # DB
  # ===============================
  datasource:
    url: jdbc:h2:file:~/digitalLabServiceProduct;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
#    platform: h2
    username: sa
    password:
  sql:
    init:
      platform: h2

  # ===============================
  # JPA / HIBERNATE
  # ===============================
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: false
        format_sql: false
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
